.include "/usr/share/avra/m328Pdef.inc"

MAIN:
	LDI R16, $00
	OUT SREG, R16
	LDI R16, $FC
	OUT DDRD, R16
	LDI R16, $05
	OUT DDRB, R16
	LDI R16, $3F
	OUT DDRC, R16

	.DEF A = R16
	.DEF B = R17
	.DEF C = R18
	.DEF D = R19
	.DEF GX = R20
	.DEF T = R21
	.DEF R = R22
	.DEF COM = R23
	.DEF SEC_ONES = R24
	.DEF SEC_TENS = R25
	.DEF MIN_ONES = R26
	.DEF MIN_TENS = R27
	.DEF HRS_ONES = R28
	.DEF HRS_TENS = R29
	.DEF P = R30
	.DEF Q = R31	
	CLR P
	CLR Q
	CLR COM

	.EQU Buzzer = 2 ;PORTB

	.EQU DELAY = $30 ;To set speed of clock

	.EQU AHT = 2
	.EQU AHO = 3
	.EQU AMT = 5
	.EQU AMO = 9

	LDI HRS_TENS, 2
	LDI HRS_ONES, 3
	LDI MIN_TENS, 5
	LDI MIN_ONES, 8
	LDI SEC_TENS, 2
	LDI SEC_ONES, 3
	JMP CLOCK_LOOP

RESET_HRS_TENS:
	CLR HRS_TENS
RESET_HRS_ONES:
	CLR HRS_ONES
RESET_MIN_TENS:
	CLR MIN_TENS
RESET_MIN_ONES:
	CLR MIN_ONES
RESET_SEC_TENS:
	CLR SEC_TENS
RESET_SEC_ONES:
	CLR SEC_ONES
CLOCK_LOOP:
	CPI HRS_TENS, AHT
	BREQ IF1
EL:	LDI P, $00
	LDI Q, DELAY
	CALL CLOCK_DISPLAY
	INC SEC_ONES
	CPI SEC_ONES, 10
	BRNE CLOCK_LOOP
	INC SEC_TENS
	CPI SEC_TENS, 6
	BRNE RESET_SEC_ONES
	INC MIN_ONES
	CBI PORTB, Buzzer ;To turn off alarm
	CPI MIN_ONES, 10
	BRNE RESET_SEC_TENS
	INC MIN_TENS
	CPI MIN_TENS, 6
	BRNE RESET_MIN_ONES
	INC HRS_ONES
	CPI HRS_TENS, 2
	BRNE CD2
CD1:
	CPI HRS_ONES, 4
	BRNE RESET_MIN_TENS
	JMP CD3
CD2:
	CPI HRS_ONES, 10
	BRNE RESET_MIN_TENS
	JMP CD3
CD3:
	INC HRS_TENS
	CPI HRS_TENS, 3
	BRNE RESET_HRS_ONES
	SER HRS_ONES
	JMP RESET_HRS_TENS
IF1:
	CPI HRS_ONES, AHO
	BREQ IF2
	JMP EL
IF2:
	CPI MIN_TENS, AMT
	BREQ IF3
	JMP EL
IF3:
	CPI MIN_ONES, AMO
	BREQ Bz
	JMP EL
Bz: SBI PORTB, Buzzer
	JMP EL

CLOCK_DISPLAY:
	MOV T, SEC_ONES
	CALL BCD
	LDI COM, $01
	CALL SEGMENT_DISPLAY

	MOV T, SEC_TENS
	CALL BCD
	LDI COM, $02
	CALL SEGMENT_DISPLAY

	MOV T, MIN_ONES
	CALL BCD
	LDI COM, $04
	CALL SEGMENT_DISPLAY

	MOV T, MIN_TENS
	CALL BCD
	LDI COM, $08
	CALL SEGMENT_DISPLAY

	MOV T, HRS_ONES
	CALL BCD
	LDI COM, $10
	CALL SEGMENT_DISPLAY

	MOV T, HRS_TENS
	CALL BCD
	LDI COM, $20
	CALL SEGMENT_DISPLAY

	DEC P
	BRNE CLOCK_DISPLAY
	DEC Q
	BRNE CLOCK_DISPLAY

	RET

BCD:
	MOV A, T
	ANDI A, $01

	MOV B, T
	LSR B
	ANDI B, $01

	MOV C, T
	LSR C
	LSR C
	ANDI C, $01

	MOV D, T
	LSR D
	LSR D
	LSR D
	ANDI D, $01
	RET

SEGMENT_DISPLAY:
	CLR GX
	CLR T
	CLR R

	;for a
	MOV GX, B
	COM GX
	MOV T, C
	COM T
	AND GX, T
	AND GX, A
	MOV T, A
	COM T
	AND T, C
	OR GX, T
	MOV T, D
	COM T
	AND GX, T
	ANDI GX, $01
	LSL GX
	LSL GX
	OR R, GX

	;for b
	MOV GX, A
	EOR GX, B
	AND GX, C
	ANDI GX, $01
	LSL GX
	LSL GX
	LSL GX
	OR R, GX

	;for c
	MOV GX, A
	COM GX
	AND GX, B
	MOV T, C
	COM T
	AND GX, T
	ANDI GX, $01
	LSL GX
	LSL GX
	LSL GX
	LSL GX
	OR R, GX

	;for d
	MOV GX, A
	EOR GX, C
	MOV T, B
	COM T
	AND GX, T
	MOV T, A
	AND T, B
	AND T, C
	OR GX, T
	MOV T, D
	COM T
	AND GX, T
	MOV T, B
	COM T
	AND T, A
	AND T, D
	COM C
	AND T, C
	OR GX, T
	COM C
	ANDI GX, $01
	LSL GX
	LSL GX
	LSL GX
	LSL GX
	LSL GX
	OR R, GX

	;for e
	MOV GX, B
	COM GX
	MOV T, C
	COM T
	AND GX, T
	MOV T, D
	COM T
	OR GX, T
	AND GX, A
	MOV T, B
	COM T
	AND T, C
	COM D
	AND T, D
	OR GX, T
	COM D
	ANDI GX, $01
	LSL GX
	LSL GX
	LSL GX
	LSL GX
	LSL GX
	LSL GX
	OR R, GX

	;for f
	MOV T, A
	OR T, B
	MOV GX, C
	COM GX
	AND GX, T
	MOV T, A
	AND T, B
	OR GX, T
	MOV T, D
	COM T
	AND GX, T
	ANDI GX, $01
	LSL GX
	LSL GX
	LSL GX
	LSL GX
	LSL GX
	LSL GX
	LSL GX
	OR R, GX

	;for g
	MOV GX, B
	COM GX
	MOV T, C
	COM T
	AND GX, T
	MOV T, D
	COM T
	AND GX, T
	MOV T, A
	AND T, B
	AND T, C
	OR GX, T
	ANDI GX, $01

	OUT PORTC, COM
	OUT PORTD, R
	CPI GX, $01
	BREQ O1
	CBI PORTB, 0
	RET
O1: SBI PORTB, 0
	RET
